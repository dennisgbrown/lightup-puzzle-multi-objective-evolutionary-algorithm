# ----------------------------------------------------------------------------
[basic_options] # Basic options for this experiment. Don't change this header
# ----------------------------------------------------------------------------

# random_seed should be a number. Comment out random_seed to use system time as the seed.
#random_seed = 1601166758781

# search_strategy should name the desired search strategy.
# Options: random, ea, moea
#search_strategy = random
#search_strategy = ea
search_strategy = moea

# Number of runs per experiment
num_runs_per_experiment = 30

# Number of fitness evals per run (unless strategy overrides it)
num_fitness_evals_per_run = 10000

# Log file path
log_file_path = logs/d2-100-50-fps-plus-rand.txt

# Solution file path
solution_file_path = solutions/d2-100-50-fps-plus-rand.txt


# ----------------------------------------------------------------------------
[moea_options] # Options for the MOEA strategy. Don't change this header
# ----------------------------------------------------------------------------

# Fitness Function -- use 3 or 4 objectives?
# Options: 3_obj, 4_obj
fitness_function = 3_obj
#fitness_function = 4_obj

# Fitness sharing enabled?
#fitness_sharing = true
fitness_sharing = false

# Crowding enabled?
#crowding = true
crowding = false

# Initialization
# Options: uniform_random, validity_forced (plus uniform random)
initialization = validity_forced
#initialization = uniform_random

# Population size
mu = 100

# Offspring size
lambda = 50

# Percent chance of combination
# Per assignment 1b feedback to never skip recombination, I have set
# this to 1.0 and left the code in place just in case.
p_c = 1.0

# Percent chance an child will be mutated at all
p_mchild = 0.70

# Percent chance of mutation of individual bit
p_m = 0.005

# Mutation rate strategy
# Options: fixed, self-adaptive
mutation_rate_strategy = fixed
#mutation_rate_strategy = self_adaptive

# Parent selection method to generate mating pool.
# Options: fitness_proportional_selection, k_tournament_with_replacement,
#          stochastic_uniform_sampling, uniform_random
parent_selection = fitness_proportional_selection
#parent_selection = k_tournament_with_replacement
#parent_selection = uniform_random

# Tournament size for parent selection, if using k-tournament
tournament_size_for_parent_selection = 10

# Survival strategy
# Options: plus, comma
survival_strategy = plus
#survival_strategy = comma

# Survival selection method.
# Options: truncation, k_tournament_without_replacement,
#          fitness_proportional_selection_without_replacement,
#          uniform_random_without_replacement
#survival_selection = truncation
#survival_selection = k_tournament_without_replacement
#survival_selection = fitness_proportional_selection_without_replacement
survival_selection = uniform_random_without_replacement

# Tournament size for survival selection, if using k-tournament
tournament_size_for_survival_selection = 10

# Termination method
# If choosing number_of_evals, enter that number in "num_fitness_evals_per_run" above
# Options: number_of_evals, no_change_in_top_level
termination = number_of_evals
#termination = no_change_in_top_level

# n for termination convergence criterion, if using that termination method
n_for_convergence = 10000

# n for no change in top level, if using that termination method
n_for_no_change_in_top_level = 100

